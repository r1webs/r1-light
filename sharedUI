<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta http-equiv="X-UA-Compatible" content="IE=8"/>

<title>sharedUI - A jQuery UI plug-in library</title>

<link rel="stylesheet" type="text/css" href="http://r1webs.in/sharedUI/css/styles.css"/>

<script type="text/javascript" src="http://r1webs.in/sharedUI/js/jquery-1.5.2.min.js"></script>

<script type="text/javascript" src="http://r1webs.in/sharedUI/js/sharedUI.1.0.js"></script>

<script type="text/javascript">

  $(document).ready(function(){

		$.sharedUI.tooltip($('a.gettooltip'),{'ttClass':'newTooltip'});

		$.sharedUI.dropdown($('#mainmenu li'));

		$.sharedUI.tabcontent($('#uitab li a'),'uitab');

		$.sharedUI.cleardefaulttext($('input.txtbox'));

		$.sharedUI.textcounter($('input.txtbox,textarea.txtbox'));

		$.sharedUI.dropdownbyclick($('.attachment'),'overAttachment');

		$.sharedUI.enablesavebutton($('#enablebtn'),{'saveButton':true,'saveButtonClass':'saveButton'});

		

		$.sharedUI.dialogbox($('input.submitBtn'),{'eventType':'click','dialogType':'confirmation','title':'Click - Dialog box','message':'This is the default text, change this text with your message!','label':'Accept,Decline'});

		$.sharedUI.dialogbox($('input.trigerAlert1'),{'eventType':'focus','dialogType':'confirmation','title':'onFocus - Dialog box','message':'This is the default text, change this text with your message!','label':'Accept,Decline'});

		$.sharedUI.dialogbox($('input.trigerAlert2'),{'eventType':'blur','dialogType':'confirmation','title':'onBlur - Dialog box','message':'This is the default text, change this text with your message!','label':'Accept,Decline'});

		

		$.sharedUI.dialogbox($('input.sendit'),{'eventType':'click','dialogType':'information','title':'Information Dialog box','message':'This is the default text, change this text with your message!','label':'Ok thanks'});

		

		$.sharedUI.lightbox($('a.openLightbox'),{'width':'500','height':'500'});

	});

	var confirmBox;

</script>

</head>

<body>

<div class="wrapper">

<div class="header">

<a href="http://r1webs.in/sharedUI/sharedUI.1.1.zip" class="download">Download library v1.1</a>

<h1>sharedUI</h1>

<h2>A jQuery UI plug-in library</h2>

</div>

<div class="waytouse">

<h2>what is sharedUI?</h2>

<p>sharedUI is the one jQuery library which has multiple UI components.</p> <br/><p>Based on the project we can add/remove components in the library. But, the library will remain same and the approach also the same.</p>

</div>

<div class="waytouse">

<h2>Advantages</h2>

<ol>

<li>Standard approach for all projects</li>

<li>Easy to maintain</li>

<li>Reduces development time</li>

<li>Improves application performance</li>

<li>Improves Quality of code</li>

</ol>

</div>

<div class="waytouse">

<h2>How to use?</h2>

<ol>

<li>Add jQuery library in your page</li>

<li>Download - sharedUI.1.0.js and add to your page below jQuery library</li>

<li>Call function using $.sharedUI (For example: <em>$.sharedUI.yourfunction('jQueryselector','your options');</em>)</li>

<li>Below listed the components and way to integrate.</li>

</ol>

</div>

<div class="waytouse waytouselast">

<h2>Component List</h2>

<ol>

<li><a href="#dropdownmenu">Multi level Drop down menu</a></li>

<li><a href="#tooltip">Custom Tool tip</a></li>

<li><a href="#dropdownmenuclick">Drop down menu - By Click</a></li>

<li><a href="#tabs">Advanced Tabs</a></li>

<li><a href="#defaulttext">Input Field - Clear Default Text</a></li>

<li><a href="#textcounter">Text counter - Form Inputs</a></li>

<li><a href="#enablesavebutton">Enable Save Button - Form</a></li>

<li><a href="#customdialogbox">Show Custom Dialog Box</a></li>

<li><a href="#customdialogbox">Light Box</a></li>

</ol>

</div>

<div style="clear:both"></div>

<!-- Drop down Menu -->

<div class="component">

<a name="dropdownmenu"></a>

<h2>1. Multi level Drop down menu</h2>

<div>

<hr size="1"/>

<p class="description">Drop down or spry menu mostly used in the top navigation. It'll have one or more level of navigation lists. By considering this, i created customizable spry menu given below.</p>

<p class="demo">Demo:</p>

<ul id="mainmenu">

<li><a href="#">Menu 1</a>

	<ul>

	<li><a href="#">Submenu1</a></li>

	<li><a href="#">Submenu2</a></li>

	<li><a href="#" class="subMenu">Submenu3</a>

		<ul style="position:absolute;left:70px;top:0;display:none;">

		<li><a href="#">Level2-1</a></li>

		<li><a href="#">Level2-2</a></li>

		<li><a href="#">Level2-3</a></li>

		</ul>

	</li>

	<li><a href="#">Submenu4</a></li>

	</ul>

</li>

<li><a href="#">Menu 2</a>

	<ul>

	<li><a href="#">Submenu5</a></li>

	<li><a href="#">Submenu6</a></li>

	<li><a href="#">Submenu7</a></li>

	<li><a href="#">Submenu8</a></li>

	</ul>

</li>

<li><a href="#">Menu 3</a>

	<ul>

	<li><a href="#">Submenu9</a></li>

	<li><a href="#">Submenu10</a></li>

	<li><a href="#">Submenu11</a></li>

	<li><a href="#">Submenu12</a></li>

	</ul>

</li>

<li><a href="#">Menu 4</a>

	<ul>

	<li><a href="#">Submenu13</a></li>

	<li><a href="#">Submenu14</a></li>

	<li><a href="#">Submenu15</a></li>

	<li><a href="#">Submenu16</a></li>

	</ul>

</li>

</ul>



<p class="showsourcecode"><a href="javascript:void(0)">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="dropdownHTML" rows="7" cols="35" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.dropdown($('#mainmenu li'));

		});

</script>

<! -- Inside BODY -->

<ul id="mainmenu">

<li><a href="#">Menu 1</a>

	<ul>

	<li><a href="#">Submenu1</a></li>

	<li><a href="#">Submenu2</a></li>

	<li><a href="#" class="subMenu">Submenu3</a>

		<ul style="position:absolute;left:70px;top:0;display:none;">

		<li><a href="#">Level2-1</a></li>

		<li><a href="#">Level2-2</a></li>

		<li><a href="#">Level2-3</a></li>

		</ul>

	</li>

	<li><a href="#">Submenu4</a></li>

	</ul>

</li>

<li><a href="#">Menu 2</a>

	<ul>

	<li><a href="#">Submenu5</a></li>

	<li><a href="#">Submenu6</a></li>

	<li><a href="#">Submenu7</a></li>

	<li><a href="#">Submenu8</a></li>

	</ul>

</li>

<li><a href="#">Menu 3</a>

	<ul>

	<li><a href="#">Submenu9</a></li>

	<li><a href="#">Submenu10</a></li>

	<li><a href="#">Submenu11</a></li>

	<li><a href="#">Submenu12</a></li>

	</ul>

</li>

<li><a href="#">Menu 4</a>

	<ul>

	<li><a href="#">Submenu13</a></li>

	<li><a href="#">Submenu14</a></li>

	<li><a href="#">Submenu15</a></li>

	<li><a href="#">Submenu16</a></li>

	</ul>

</li>

</ul>

</textarea>

</div>



<div class="sourceCode">

<h3>CSS</h3>

<textarea id="dropdownHTML" rows="7" cols="34" readonly>

#mainmenu {

font-size:11px;

margin:0 0 170px;

}

#mainmenu li {

list-style:none;

float:left;

}

#mainmenu li a {

display:block;

background:#006596;

padding:5px 10px;

width:50px;

color:#fff;

text-decoration:none;

}

#mainmenu li a:hover {

background:#009015;

}

#mainmenu li li {

float:none;

margin:0;

padding:0;

}

#mainmenu li ul {

position:absolute;

margin:0;

padding:0;

margin-top:1px;

display:none;

}

#mainmenu li li a {

background:#66a3be;

padding:5px 10px;

width:50px;

color:#fff;

}

#mainmenu li li li a {

background:#75bad8;

}

</textarea>

</div>



<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="dropdownHTML" rows="7" cols="34" readonly>

$.sharedUI = {

  dropdown: function(obj) {

			return obj.each(function(){

			$(this).hover(function(){

				$('ul',this).slideDown();

				/*For second level drop down*/

				$('ul ul',this).hide();

				return false;

			},

			function(){

				$('ul',this).slideUp();

			});

		});

  }

  }

</textarea>

</div>

</div>

</div>

</div>



<!-- Tooltip -->

<div class="component">

<a name="tooltip"></a>

<h2>2. Custom Tool tip</h2>

<div>

<hr size="1"/>

<p class="description">This tooltip uses very simple approach to show hidden information. It is designed to show already given information only. You can customize the look and feel of the tooltip as you own. Refer below linked words to see tooltips. Please note this tooltip still under development, some of the upgrades and options will be done.</p>

<p class="demo">Demo:</p>

<div>Lorem ipsum dolor sit amet, <a href="#" class="gettooltip">consectetur adipisicing elit</a><div class="ttContent" style="display:none;"><p>Place your tooltip content here</p></div>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut <a href="#" class="gettooltip">aliquip</a> <div class="ttContent" style="display:none;"><p>Test content line number one</p><p>Test content line number two</p></div>ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</div>

<ul>

<li>Architecto <a href="#" class="gettooltip">beatae</a> <span class="ttContent">Here is the content for tooltip</span> vitae dicta sunt explicabo</li>

<li>Nemo enim ipsam voluptatem</li>

<li><a href="#" class="gettooltip" title="Tempora incidunt ut labore et dolore alwee aee sdfsdfs">Tempora incidunt ut labore et dolore ...</a><span class="ttContent">Tempora incidunt ut labore et dolore sdsf</span>

</li>

</ul>

<p class="showsourcecode"><a href="javascript:void(0)">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.tooltip($('a.gettooltip'),{'ttClass':'newTooltip'});

		});

</script>

<! -- Inside BODY -->

<div>Lorem ipsum dolor sit amet, <a href="#" class="gettooltip">consectetur adipisicing elit</a><div class="ttContent" style="display:none;"><p>Place your tooltip content here</p></div>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut <a href="#" class="gettooltip">aliquip</a> <div class="ttContent" style="display:none;"><p>Test content line number one</p><p>Test content line number two</p></div>ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</div>

</textarea>

</div>

<div class="sourceCode">

<h3>CSS</h3>

<textarea id="tooltipcss" cols="34" rows="7" readonly>

.newTooltip {position:absolute;width:440px;z-index:102;display:none;}

.newTooltip .arrow {background:url(../images/tooltip_topArrow.gif) no-repeat 25px bottom;height:25px;width:440px;}

.tposRight .arrow {background-position:400px bottom;}

.newTooltip .tipInfo .tipTop,.newTooltip .tipInfo .tipBottom {background: url(../images/cfa_tooltipNew.gif) no-repeat;height:7px;width:440px;overflow:hidden;}

.newTooltip .tipInfo .tipBottom {background-position: right 0;}

.newTooltip .tipInfo .tipContent {background:#E0F0F8;border:solid 1px #ADD9ED;border-width:0 1px;padding:0 10px;width:418px;overflow:hidden;}

</textarea>

</div>

<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="tooltipjs" cols="34" rows="7" readonly>

$.sharedUI = {

tooltip: function(options){

		

		var settings = $.extend({

		'position':'left'

		}, options);

		

		var element = $(this);

		var tipPosX;

		var tipPosY;

		var tooltipHtml;

		

		this.each(function(){

			element.mouseover(function(cursor){

				var data = $(this).next('.ttContent').html();

				$('.'+options.ttClass).remove();

				tipPosX = cursor.pageX;

				tipPosY = cursor.pageY;

				var windowWidth = $(window).width();

				tooltipHtml  = '<div class="newTooltip"><div class="arrow"></div><div class="tipInfo"><div class="tipTop"></div><div class="tipContent">'+data+'</div><div class="tipBottom"></div></div></div>';

				$('body').append(tooltipHtml);

				var tooltipWidth = $('.'+options.ttClass).width();

				var tipPos = tipPosX+tooltipWidth;

				tooltipWidth -= 30;// 30 is for making align the tooltip with cursor.

				if(tipPos>windowWidth){

					$('.'+options.ttClass).css({'left':tipPosX-tooltipWidth,'top':tipPosY});

					$('.'+options.ttClass).addClass('tposRight');

						if(tipPosX<tooltipWidth){

							var adj = tooltipWidth-tipPosX;

							adj+=30;// 30 is for making align the tooltip with cursor.

							var arwPos = $('.'+options.ttClass+' .arrow').css('background-position-x').split('px');

							arwPos = Math.floor(arwPos[0]);

							var setarwPos = arwPos-adj;

							$('.'+options.ttClass).css({'left':tooltipWidth-tipPosX,'top':tipPosY});

							$('.'+options.ttClass+' .arrow').css('background-position-x',setarwPos+'px');

						}

				}

				else{

					$('.'+options.ttClass).css({'left':tipPosX-30,'top':tipPosY});

				}

				$('.'+options.ttClass).show();

			});

			

			element.mouseout(function(cursor){

				$('.'+options.ttClass).hide();

				var thisclassName = element.attr('class');

				function handler(event){

					var $target = $(event.target);

					if($target.is('.'+options.ttClass+' *') || $target.is('.'+thisclassName)){

						$('.'+options.ttClass).show();

					}

					else{

					$('.'+options.ttClass).hide();

					}

				}

				$('body').mouseover(handler);

			});

			

			$('body').delegate('.'+options.ttClass,'mouseover', function(){

				$(this).show();

			});

			$('body').delegate('.'+options.ttClass,'mouseout', function(){

				$(this).hide();

			});

		});

	}

  }

</textarea>

</div>

</div>

</div>

</div>

<!-- Drop down by click -->

<div class="component">

<a name="dropdownmenuclick"></a>

<h2>3. Drop down Menu - By click</h2>

<div>

<hr size="1"/>

<p class="description">This kind of drop down menu can be used anywhere in the page. For example: Login, see attachments, Filters etc., Below given drop down menu using hide and show method. The content already been generated. By clicking on link the menu will be shown and hidden. And if you click outside the menu, the menu will be hidden.</p>

<p class="demo">Demo:</p>

<p style="float:left;">Click here to see attachments&nbsp;&nbsp;<p>

<div style="float:left;">

	<div class="attachment"></div>

				<div class="overAttachment">

					<dl>

						<dt><div class="attachment"></div>

						4 Items

						</dt>

						<dd><a href="#">iconnect-whatsnew</a></dd>

						<dd><a href="#">screenshots</a></dd>

						<dd><a href="#">iconnect-Share price</a></dd>

						<dd><a href="#">iconnect-fast facts</a></dd>

					</dl>

				</div>

</div>

<p class="showsourcecode"><a href="javascript:void(0);">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.dropdownbyclick($('.attachment'),'overAttachment');

		});

</script>

<! -- Inside BODY -->

	<div class="attachment"></div>

				<div class="overAttachment">

					<dl>

						<dt><div class="attachment"></div>

						4 Items

						</dt>

						<dd><a href="#">iconnect-whatsnew</a></dd>

						<dd><a href="#">screenshots</a></dd>

						<dd><a href="#">iconnect-Share price</a></dd>

						<dd><a href="#">iconnect-fast facts</a></dd>

					</dl>

				</div>

</textarea>

</div>

<div class="sourceCode">

<h3>CSS</h3>

<textarea id="tooltipcss" cols="34" rows="7" readonly>

.attachment,.disabledAtt {

background:url(../images/attachmentNormal.gif) no-repeat; 

width:45px;

height:19px; 

float:left; 

cursor:pointer;

}

.overAttachment .attachment {

background: url("../images/attachmentOver.jpg") repeat;

border:none;

float:right;

}

.overAttachment {

background:url(../images/dropGradbtm.jpg) no-repeat left bottom;

position:absolute;

width:166px;

text-align:left;

display:none;

z-index:100;

margin:-3px 0 0 -120px; +*margin:-3px 0 0 -165px;

}

.overAttachment dl {

background:url(../images/dropGradtop.jpg) no-repeat;

margin-bottom:6px; 

overflow:hidden; 

_float:left;

}

.overAttachment dl dt {

font-weight:bold;

padding:3px 1px 5px 8px;

color:#fff;

}

.overAttachment dl dd {

padding:3px 8px;

}

.overAttachment dd a {

color:#fff;

cursor:pointer;

}

.overAttachment dd a:hover {

text-decoration:underline;

}

.overAttachment p {

border-top:solid 1px #ccc;

padding:4px 8px;

}

.overAttachment img {

margin-right:5px;

}

</textarea>

</div>

<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="tooltipjs" cols="34" rows="7" readonly>

$.sharedUI = {

dropdownbyclick: function(obj,dropBox){

		return obj.each(function(){

		var dropmenu = '.'+dropBox;

			$(this).click(function(){

				var activeEvent = $(this).next();

				if(activeEvent.is(dropmenu)){

					var status = $(this).next(dropmenu).css('display');

						if (status=='none'){

							$(this).next(dropmenu).show();

						}

				}

				else{

					$(dropmenu).hide();

				}

			});

			//Hide Attachment Box When clicked on Body

			var mouse_is_inside = false;

			$(dropmenu).hover(function(){ 

				mouse_is_inside=true; 

			}, function(){ 

				mouse_is_inside=false; 

			});

			$('body').mousedown(function(){ 

				if(! mouse_is_inside) $(dropmenu).hide();

			});

		});

	}

}

</textarea>

</div>

</div>

</div>

</div>

<!-- Tab -->

<div class="component">

<a name="tabs"></a>

<h2>4. Advanced Tabs</h2>

<div>

<hr size="1"/>

<p class="description">Tabs are very familiar in web interfaces. It occupies very small area to show more information. There are some kind of tabs like full page tabs, form related tabs and widget type tabs. Here I've custom tab approach can be used for basic tab interaction as well as advanced interactions as you see below. By using the below tab you can have any number of tabbed contents based on available width. The height of the overall tab will be taken from the largest tabbed content column.</p>

<p class="demo">Demo:</p>

<div id="uitab">

<div class="tabGroup">

	<div>

		<ul>

		<li><a class="selected" href="#html">HTML</a></li>

		<li><a href="#css">CSS</a></li>

		<li><a href="#jscript">Javascript</a></li>

		<li><a href="#json">JSON</a></li>

		<li><a href="#ajax">AJAX</a></li>

		<li><a href="#oops">Object Oriented JS</a></li>

		<li><a href="#html5">HTML5/CSS3</a></li>

		</ul>

	</div>

</div>

	<div class="tabContent" style="border:solid 1px #f1f1f1;clear:both;padding:4px;">

		<div id="html">

		This is content for HTML. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

		<br><a href="#">Read here</a>

		</div>

		<div id="css">

		This is content for CSSS. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser.

		<br><a href="#">Read more</a>

		</div>

		<div id="jscript">

		This is content for Javascript. Javascript is the client side running script. It can be used with all programming languages.

		<br><a href="#">Readmore</a>

		</div>

		<div id="json">

		This is content for JSON. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

		<br><a href="#">Read here</a>

		</div>

		<div id="ajax">

		This is content for AJAX. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser.

		<br><a href="#">Read more</a>

		</div>

		<div id="oops">

		This is content for OOPS. Javascript is the client side running script. It can be used with all programming languages.

		<br><a href="#">Readmore</a>

		</div>

		<div id="html5">

		This is content for HTML5. Javascript is the client side running script. It can be used with all programming languages.

		<br><a href="#">Readmore</a>

		</div>

	</div>

</div>

<p class="showsourcecode"><a href="javascript:void(0);">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.tabcontent($('#uitab li a'),'uitab');

		});

</script>

<! -- Inside BODY -->

<div id="uitab">

<div class="tabGroup">

	<div>

		<ul>

		<li><a class="selected" href="#html">HTML</a></li>

		<li><a href="#css">CSS</a></li>

		<li><a href="#jscript">Javascript</a></li>

		<li><a href="#json">JSON</a></li>

		<li><a href="#ajax">AJAX</a></li>

		<li><a href="#oops">Object Oriented JS</a></li>

		<li><a href="#html5">HTML5/CSS3</a></li>

		</ul>

	</div>

</div>

	<div class="tabContent" style="border:solid 1px #f1f1f1;clear:both;padding:4px;">

		<div id="html">

		This is content for HTML. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

		<br><a href="#">Read here</a>

		</div>

		<div id="css">

		This is content for CSSS. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser.

		<br><a href="#">Read more</a>

		</div>

		<div id="jscript">

		This is content for Javascript. Javascript is the client side running script. It can be used with all programming languages.

		<br><a href="#">Readmore</a>

		</div>

		<div id="json">

		This is content for JSON. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

		<br><a href="#">Read here</a>

		</div>

		<div id="ajax">

		This is content for AJAX. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser. CSS is used with html and xml to showcase the data in web browser.

		<br><a href="#">Read more</a>

		</div>

		<div id="oops">

		This is content for OOPS. Javascript is the client side running script. It can be used with all programming languages.

		<br><a href="#">Readmore</a>

		</div>

		<div id="html5">

		This is content for HTML5. Javascript is the client side running script. It can be used with all programming languages.

		<br><a href="#">Readmore</a>

		</div>

	</div>

</div>

</textarea>

</div>

<div class="sourceCode">

<h3>CSS</h3>

<textarea id="tooltipcss" cols="34" rows="7" readonly>

#uitab {

width:400px;

}

.tabGroup {

position:relative;

}

.tabGroup div {

overflow:hidden;

}

#uitab ul {

clear:both;

display:block;

position:relative;

}

#uitab li {

list-style:none;

float:left;

}

#uitab li a {

display:block;

background:#66a3be;

color:#fff;

padding:5px 10px;

margin-right:1px;

text-decoration:none;

}

#uitab li a.selected {

background:#fff;

color:#000;

border:solid 1px #f1f1f1;

border-bottom:none;

position:relative;

top:1px;

font-weight:bold;

}

#uitab #html,#uitab #css,#uitab #jscript {

clear:both;

background:#fff;

overflow:hidden;

}

#uitab #html {

display:block;

}

#uitab a.previousTab,#uitab a.forwardTab,#uitab a.tabList {

position:absolute;

width:30px;

height:20px;

background:#86C533;

color:#fff;

text-align:center;

text-decoration:none;

padding-top:6px;

top:0;

}

#uitab a.forwardTab {

right:32px;

}

#uitab a.tabList{

background:#00a1d5 url(../images/downArw.png) no-repeat center center;

right:0;

}

#uitab .tabdropList {

position:absolute;

right:0;

}

#uitab .tabdropList li{

list-style:none;

display:block;

float:none;

}

#uitab .tabdropList li a{

border-bottom:solid 1px #fff;

}

#uitab .tabdropList li a:hover {

color:#333;

background:#fff;

}

#uitab a.disabled {

background:#ccc;

cursor:default;

}</textarea>

</div>

<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="tooltipjs" cols="34" rows="7" readonly>

$.sharedUI={

tabcontent: function(obj,option){

	return obj.each(function(){

		var container = '#'+option;

		var content = $(container+' div.tabContent > div');

		var heights = [];

		

		$(obj).click(function(event){

			event.preventDefault();

			$(container+' li a').removeClass('selected');

			$(this).addClass('selected');

			content.hide().filter(this.hash).show();

		});

		

		$.each(content, function(){

			var heightarray = $(this).height();

			heights.push(heightarray);

		});

		

			maxValue = function (array) {

			mxm = array[0];

			for (i=0; i<array.length; i++) {

				if (array[i]>mxm) {

					mxm = array[i];

				}

			}

			return mxm;

		};

		

		var maxval = maxValue(heights);

		content.css('height',maxval+'px').hide();

		$(container+' div.tabContent > div:first-child').show();

		

		//For Tab scroll

		var tabgroupWidth = $(container).width();

		var tabgroupHeight = $(container+' .tabGroup').find('li').height();

		

		

		var tab = $(container+' .tabGroup').find('li');

		var tabwidths = [];

		

		$.each(tab, function(){

		var tabwidtharray = $(this).width();

		tabwidths.push(tabwidtharray);

		});

		

		var tabOverallWidth = eval(tabwidths.join('+'));

		//Adjustment made for tab alignment

		tabOverallWidth+=5;

		$(container).find('.tabGroup').children().width(tabgroupWidth).height(tabgroupHeight);

		$(container+' .tabGroup ul').width(tabOverallWidth);

		

		var tabArrows;

		if(tabOverallWidth>tabgroupWidth){

			tabArrows = '<a href="javascript:void(0)" class="previousTab disabled">&lt;</a><a href="javascript:void(0)" class="forwardTab">&gt;</a><a href="javascript:void(0)" class="tabList"></a>';

			$(container+' .tabGroup').append(tabArrows);

			var currentWidth = $(container+' .tabGroup div').width();

			var navWidth = $('a.previousTab').width();

			navWidth = navWidth*3;

			currentWidth = currentWidth-navWidth;

			$(container+' .tabGroup div').width(currentWidth).css('margin-left',navWidth/3);

			var tabnos = $(container+' .tabGroup ul li').length;

			

			var tabUL = $(container+' .tabGroup ul');

			

			$('a.forwardTab').click(function(){

				var notDisabled = $(this).attr('class');

				if(notDisabled!=='forwardTab disabled'){

					var currentPos = tabUL.css('left');

					if(currentPos=='auto') currentPos='0';

					currentPos = currentPos.substring(0, currentPos.length-2);

					currentPos = Math.abs(currentPos);

					currentPos = parseInt(currentPos);

					var avgWidthNew = tabOverallWidth/tabnos;

					var newLeft = currentPos+avgWidthNew;

					//tabUL.css('left','-'+newLeft+'px');

					tabUL.animate({left:'-'+newLeft+'px'},150);

					if(newLeft>avgWidthNew){

						$(this).addClass('disabled');

						var setrightpos = tabOverallWidth-currentWidth;

						tabUL.animate({left:'-'+setrightpos+'px'},150);

					}

					$('a.previousTab').removeClass('disabled');

				}

			});

			$('a.previousTab').click(function(){

				var notDisabled = $(this).attr('class');

				if(notDisabled!=='previousTab disabled'){

					var currentPos = tabUL.css('left');

					currentPos = currentPos.substring(0, currentPos.length-2);

					currentPos = parseInt(currentPos);

					var avgWidthNew = tabOverallWidth/tabnos;

					var newLeft = currentPos+avgWidthNew;

					//tabUL.css('left',newLeft+'px');

					tabUL.animate({left:newLeft+'px'},150);

					if(newLeft>=0){

						$(this).addClass('disabled');

						tabUL.animate({left:'0'},150);

					}

					$('a.forwardTab').removeClass('disabled');

				}

				else{

				return false;

				}

			});

			$('a.tabList').hover(function(){

				var dropListitems = tabUL.html();

				var dropList = '<ul class="tabdropList">'+ dropListitems +'</ul>';

				$('.tabGroup').append(dropList);

			},

			function(){

			$('.tabdropList').hide();

			$('.tabdropList').hover(function(){

					$(this).show();

					$(this).children('li').children('a').click(function(event){

						$(container+' li a').removeClass('selected');

						var getthisval = this.hash;

						var tabVal=[];

						tabUL.find('a').each(function(){

							var tabhref = this.hash;

							tabVal.push(tabhref);

							return tabVal;

						});

						

						event.preventDefault();

						content.hide().filter(this.hash).show();

						

						// Work around for IE to make it work indexOf in Array 

						if (!Array.prototype.indexOf)

						{

						  Array.prototype.indexOf = function(elt /*, from*/)

						  {

							var len = this.length >>> 0;



							var from = Number(arguments[1]) || 0;

							from = (from < 0)

								 ? Math.ceil(from)

								 : Math.floor(from);

							if (from < 0)

							  from += len;



							for (; from < len; from++)

							{

							  if (from in this &&

								  this[from] === elt)

								return from;

							}

							return -1;

						  };

						}

						// IE work around ends

						

						if(tabVal.indexOf(getthisval)>='-1'){

							var tabPos = tabVal.indexOf(getthisval);

							tabPos+=1;

							$(container+' li:nth-child('+ tabPos +') a').addClass('selected');

							var thisPos = $(container+' li:nth-child('+ tabPos +') a').position();

							var thisWidth = $(container+' li:nth-child('+ tabPos +') a').width();

							var thisLeft = thisPos.left;

							var endPos = thisLeft+thisWidth;

							

							if(endPos>currentWidth){

								var adjustment = endPos-currentWidth;

								adjustment+=25;

								tabUL.animate({left:'-'+adjustment+'px'},150);

								//$('a.forwardTab').addClass('disabled');

								$('a.previousTab').removeClass('disabled');

							}

							else{

								tabUL.animate({left:'0'},150);

								$('a.forwardTab').removeClass('disabled');

								$('a.previousTab').addClass('disabled');

							}

						}

					});

				},function(){$('.tabdropList').hide();});

			});

			return false;

		}



		



	});

 };

</textarea>

</div>

</div>

</div>

</div>

<!-- Clear default text -->



<div class="searchBox">

	<div class="searchForm">

	<form id="enablebtn">

	<div class="component">

	<a name="defaulttext"></a>

	<h2>5. Type and test the default text</h2>

	<div>

	<hr size="1"/>

	<p class="demo">Demo:</p>

	<p class="description">Default text means the text added already using value attribute in input text boxes. Mostly, default text related to Help or example to guide the user. Sometimes, it'll replace the labels too. In that case, when user types into input box default text will be replaced with new text. If user deletes whatever he typed, the default text should be in the place. Refer below input boxes.

	</p>

				<table>

					<tr class="filtergrp">

						<td>

							<input type="textbox" id="business" value="Type your name" class="txtbox business" name="business">

						</td>

						<td>

							<input type="textbox" id="function" value="Type your Email Address" class="txtbox function" name="function">

						</td>

						<td>

							<input type="textbox" id="riskcontrol" value="Type your Age" class="txtbox risk" name="risk">

						</td>

						<td>

							<input type="textbox" id="country" value="Type your Gender" class="txtbox" name="country">

						</td>

					</tr>

				</table>

<p class="showsourcecode"><a href="javascript:void(0);">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.cleardefaulttext($('input.txtbox'));

		});

</script>

<! -- Inside BODY -->

				<table>

					<tr class="filtergrp">

						<td>

							<input type="textbox" id="business" value="Type your name" class="txtbox business" name="business">

						</td>

						<td>

							<input type="textbox" id="function" value="Type your Email Address" class="txtbox function" name="function">

						</td>

						<td>

							<input type="textbox" id="riskcontrol" value="Type your Age" class="txtbox risk" name="risk">

						</td>

						<td>

							<input type="textbox" id="country" value="Type your Gender" class="txtbox" name="country">

						</td>

					</tr>

				</table>

</textarea>

</div>

<div class="sourceCode">

<h3>CSS</h3>

<textarea id="tooltipcss" cols="34" rows="7" readonly>

.searchBox {

font-size:12px;

color:#666;

}

.searchBox input {

font-family:arial,verdana;

font-size:12px;

}



.searchBox table {

border-collapse:collapse;

}

.searchBox input.txtbox {

border:solid 1px #c2c2c2;

padding:3px 5px 4px;

color:#aaaaaa;

}

.filtergrp td {

position:relative;

vertical-align:top;

padding-right:15px;

	width:192px;

}

.filtergrp input.txtbox {

	margin:0 0 3px;

	width:155px;

	float:left;

}

.filtergrp label.hierarchy {

	display:inline-block;

	float:left;

	width:165px;

}

</textarea>

</div>

<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="tooltipjs" cols="34" rows="7" readonly>

$.sharedUI={

 cleardefaulttext: function(obj){

    return obj.each(function(){

    var default_value = $(this).val();

	var default_textcolor = $(this).css('color');

        $(this).focus(function(){

            if ($(this).val() == default_value) $(this).val("");

        });

        $(this).blur(function(){

            if ($(this).val() == "") $(this).val(default_value).css('color',default_textcolor);

            else $(this).css('color','#666');

        });

    });

}

 };

</textarea>

</div>

</div>

</div>

</div>



<!-- Text counter -->

<div class="component">

<a name="textcounter"></a>

<h2>6. Type and test the text counter</h2>

<div>

<hr size="1"/>

<p class="description">Text counter can be used for input text box and text area or both. When the user has limited character count to type in input, there should be character counter. This counter will show each character count to the user. So, user will keep in mind the amount of characters remaining.</p>

<p class="demo">Demo:</p>

<input type="text" id="topic" class="txtbox" maxlength="10" />

<span>10 remaining</span><br/><br/>

<textarea class="txtbox" maxlength="100"></textarea>

<span>100 remaining</span>

<p class="showsourcecode"><a href="javascript:void(0);">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.textcounter($('input.txtbox,textarea.txtbox'));

		});

</script>

<! -- Inside BODY -->

<input type="text" id="topic" class="txtbox" maxlength="10" />

<span>10 remaining</span><br/><br/>

&lt;textarea class="txtbox" maxlength="100"&gt;&lt;/textarea&gt;

<span>100 remaining</span>

</textarea>

</div>

<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="tooltipjs" cols="34" rows="7" readonly>

$.sharedUI={

textcounter: function(obj){

	return obj.each(function(){

		$(this).keyup(function(){

			var charLength = $(this).val().length;

			var maxlength = $(this).attr('maxlength');

			$(this).next('span').html(maxlength-charLength + ' remaining');

			if($(this).val().length > maxlength) $(this).next('span').html('<strong>You exceeded character limit.</strong>');

		});

	});

}

 };

</textarea>

</div>

</div>

</div>

</div>



<!-- Enable Save Button -->

<div class="component">

<a name="enablesavebutton"></a>

<h2>7. Enable Save Button</h2>

<div>

<hr size="1"/>

<p class="description">This object is used in Edit Forms. Intially all the fields will have their values and the submit button will be on disabled mode. Once the user starts editing the form, Save button will be enabled. If the user backs the value to the original, again the save button will be disabled.</p>

<p class="demo">Demo:</p>

			<select id="select">

            	<option selected="selected">Select</option>

                <option>Second Name</option>

                <option>Third Name</option>

            </select>

            <input type="text" id="text1" class="txt" value="1234567890" />

            <input type="text" id="text2" class="txt" value="1234567890" />

            <input type="text" id="text3" class="txt" value="1234567890" />

            <input type="text" id="text4" class="txt" value="1234567890" />

            <input type="text" id="text5" class="txt" value="1234567890" /><br/><br/>

			<input type="button" class="saveButton" value="save"/>

<p class="showsourcecode"><a href="javascript:void(0);">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.enablesavebutton($('#enablebtn'),{'saveButton':true,'saveButtonClass':'saveButton'});

		});

</script>

<! -- Inside BODY -->

        	<select id="select">

            	<option selected="selected">Select</option>

                <option>Second Name</option>

                <option>Third Name</option>

            </select>

            <input type="text" id="text1" class="txt" value="1234567890" />

            <input type="text" id="text2" class="txt" value="1234567890" />

            <input type="text" id="text3" class="txt" value="1234567890" />

            <input type="text" id="text4" class="txt" value="1234567890" />

            <input type="text" id="text5" class="txt" value="1234567890" /><br/><br/>

			<input type="button" class="saveButton" value="save"/>

</textarea>

</div>

<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="tooltipjs" cols="34" rows="7" readonly>

$.sharedUI={

enablesavebutton: function(obj,options) {

				var default_input_values = {}, default_current_values = {}, default_select_values = {};

				var defaults = {saveButton:true, saveButtonClass:'saveButton'};				

				var options = $.extend(defaults, options);            

				var inputList = $(':input[type="text"]', obj);

				var selectList = $('select', obj);

				hide(options.saveButtonClass);

				for(var i = 0; i<inputList.length ; i++){

					default_input_values[i] = inputList.eq(i).val();

				}

				for(var i = 0; i<selectList.length ; i++){

					default_select_values[i] = selectList.eq(i).val();

				}

				inputList.each(function(index) {	

					$(this).keyup(function(){						

						var sel_value = $.trim($(this).val());

						var default_value = $.trim(default_input_values[index]);

						if(sel_value == default_value){

								hide(options.saveButtonClass);

						}else{	

							if(checkAll(inputList)){								

								show(options.saveButtonClass);

							}else{

								hide(options.saveButtonClass);

							}

						}		

					});

				});

				selectList.each(function(index){

					$(this).change(function(){

						var sel_value = $.trim($(this).val());

						var default_value = default_select_values[index];

						if(sel_value == default_value){

							hide(options.saveButtonClass);

						}else{						

							if(checkAll(inputList)){

								show(options.saveButtonClass);

							}else{

								hide(options.saveButtonClass);

							}

						}

					});

				});

				function show(savebutton){

      			$('.'+savebutton).removeAttr('disabled');

				}

				function hide(savebutton){ 

      			$('.'+savebutton).attr('disabled','disabled');	

				}

				function checkAll(inputList){

					var k = 0;

					inputList.each(function(index){	

						if($(this).val()==default_input_values[index]){

							k++;

							return k;

						}

					});



					if(k!=='0'){

						return true;

					}else{

						return false;

					}

				}

  		}

 };

</textarea>

</div>

</div>

</div>

</div>

<!-- Show Custom Dialog Box -->

<div class="component">

<a name="customdialogbox"></a>

<h2>8. Show custom dialog box</h2>

<div>

<hr size="1"/>

<p class="description">This is custom dialog box</p>

<p class="demo">Demo:</p>

Click this to get dialog box: <input type="button" class="submitBtn" value="Submit">

<br><br>On focus trigger dialog box: <input type="text" val="" class="trigerAlert1">			

<br><br>On blur trigger dialog box: <input type="text" val="" class="trigerAlert2">

<br><br>Information dialog box: <input type="button" class="sendit" value="Send">			

<p class="showsourcecode"><a href="javascript:void(0);">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.dialogbox($('input.submitBtn'),{'eventType':'click','dialogType':'confirmation','title':'Click - Dialog box','message':'This is the default text, change this text with your message!','label':'Accept,Decline'});

		$.sharedUI.dialogbox($('input.trigerAlert1'),{'eventType':'focus','dialogType':'confirmation','title':'onFocus - Dialog box','message':'This is the default text, change this text with your message!','label':'Accept,Decline'});

		$.sharedUI.dialogbox($('input.trigerAlert2'),{'eventType':'blur','dialogType':'confirmation','title':'onBlur - Dialog box','message':'This is the default text, change this text with your message!','label':'Accept,Decline'});

		

		$.sharedUI.dialogbox($('input.sendit'),{'eventType':'click','dialogType':'information','title':'Information Dialog box','message':'This is the default text, change this text with your message!','label':'Ok thanks'});

		});

</script>

<! -- Inside BODY -->

Click this to get dialog box: <input type="button" class="submitBtn" value="Submit">

<br><br>On focus trigger dialog box: <input type="text" val="" class="trigerAlert1">			

<br><br>On blur trigger dialog box: <input type="text" val="" class="trigerAlert2">

<br><br>Information dialog box: <input type="button" class="sendit" value="Send">	

</textarea>

</div>

<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="tooltipjs" cols="34" rows="7" readonly>

$.sharedUI={

dialogbox:function(obj,options){

	var settings = $.extend({

					'eventType':'click',

					'dialogType':'confirmation',

					'title':'Dialog title',

					'message':'This is the default text, change this text with your message!',

					'label':'Yes,No'

					},options);

	

	var eventType = settings.eventType;

	var dialogType = settings.dialogType;

	var title = settings.title;

	var message = settings.message;

	var label = settings.label;

	

	return obj.each(function(){

		$(this).bind({

			click:function(){

			if(eventType=='click')createdialog();

			},

			focus:function(){

			if(eventType=='focus')createdialog();

			},

			blur:function(){

			if(eventType=='blur')createdialog();

			}

		});

		

		function createdialog(){

		var checkDialogBox = $('.dialogBox').length;

		if(checkDialogBox==0){

		var dialoghtml = '<div class="transparentBg"></div><div class="dialogBox"><div class="dialogTitle">'+title+'</div><div class="dialogMsg"><p>'+message+'</p></div><div class="dialogBtns"><input type="button" value="" class="dialogbtn1"><input type="button" value="" class="dialogbtn2"></div></div>';

		$('body').append(dialoghtml);

		if(dialogType=='confirmation'){

			var labelArray=label.split(',');

			$('.dialogBox .dialogBtns .dialogbtn1').val(labelArray[0]);

			$('.dialogBox .dialogBtns .dialogbtn2').val(labelArray[1]);

			removedialog(labelArray[0],labelArray[1]);

		}

		else{

			$('.dialogBox .dialogBtns .dialogbtn1').val(label);

			$('.dialogBox .dialogBtns .dialogbtn2').hide();

			removedialog(label);

		}

		var dialogbox = $('.dialogBox');

		var dialogboxwidth = dialogbox.width();

		var dialogboxheight = dialogbox.height();

		var screenwidth = $(window).width();

		var screenheight = $(window).height();

		var leftPos = (screenwidth/2)-(dialogboxwidth/2);

		var topPos = (screenheight/2)-(dialogboxheight/2);

		dialogbox.css({'left':leftPos,'top':topPos});

		}

		}

		function removedialog(x,y){

			$('.dialogBox .dialogBtns input').click(function(){

				$('.transparentBg,.dialogBox').remove();

				var optionSelected = $(this).val();

				if(x==optionSelected){

					confirmBox = x;

				}

				if(y==optionSelected){

					confirmBox = y;

				}

			});

		}

	});

}

}

</textarea>

</div>

</div>

</div>

</div>

</form>

<!-- Show Lightbox -->

<div class="component">

<a name="lightbox"></a>

<h2>9. Lightbox</h2>

<div>

<hr size="1"/>

<p class="description">Light box is more like pop up window. But it'll custom UI and it can't be blocked by browser.</p>

<p class="demo">Demo:</p>

<a href="lightbox_page.html" class="openLightbox">Click here</a> for lightbox	

<p class="showsourcecode"><a href="javascript:void(0);">View source code</a></p>

<div class="sourcegroup">

<div class="sourceCode">

<h3>HTML</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

<! -- Inside HEAD -->

<script>

	$(document).ready(function(){

		$.sharedUI.lightbox($('a.openLightbox'),{'width':'500','height':'500'});

		});

</script>

<! -- Inside BODY -->

<a href="lightbox_page.html" class="openLightbox">Click here</a> for lightbox		

</textarea>

</div>

<div class="sourceCode">

<h3>CSS</h3>

<textarea id="tooltiphtml" cols="35" rows="7" readonly>

.base {

position: fixed;

z-index:1;

top: 0px;

left: 0px;

height:100%;

width:100%;

background-color:#000;

filter:alpha(opacity=35);

-moz-opacity: 0.35;

opacity: 0.35;

}

.close {

background:url(../images/closeLightBox.png) no-repeat;

position:absolute;

right:9px;

top:9px;

text-indent:-100000px;

width:16px;

height:16px;

}

.lbPanel{

position:fixed;

z-index:2;

background:#fff;

border:10px solid #E5EEF5;

top:0;

left:0;

}

#ifr {

z-index:1;

position:absolute;

top: 0;

left: 0;

background-color:#fff;

border:none;

filter:alpha(opacity=0);

-moz-opacity: 0;

opacity: 0;

}

#inneriframe {

clear:both;

border:none;

overflow:hidden;

}

</textarea>

</div>

<div class="sourceCode">

<h3>Javascript</h3>

<textarea id="tooltipjs" cols="34" rows="7" readonly>

$.sharedUI={

lightbox:function(obj,options){

	var settings = $.extend({	

		'width':500,

		'height':300

	},options);

	

	var lb_Width = settings.width;

	var lb_height = settings.height;

	

	return obj.each(function(){

		$(this).click(function(event){

			event.preventDefault();

			var url = $(this).attr('href');

			loadpop(url);

		});



		$(window).resize(function() {

			poscenter2();

		});

		

		var popupstatus = 0;

		function loadpop(url){

			if (popupstatus == 0){

				if (document.getElementById('ifr')===null){

					$('body').append('<iframe id="ifr"></iframe>');

				}

				$('#innerframe').remove();

				var lbElements = '<div class="base"></div><div class="lbPanel"><a href="javascript:void(0)" class="close"></a><iframe id="inneriframe" src="'+url+'" width="'+lb_Width+'" height="'+lb_height+'" allowtransparency="true" frameborder="0" scrolling="no"></iframe></div>';

				$('body').append(lbElements);

				var windowwidth = $(window).width();

				var windowheight = $(window).height();

				$('.lbPanel').width(lb_Width);

				$('.lbPanel').height(lb_height);

				$('.lbPanel').css({'top':(windowheight/2)-(lb_height/2),'left':(windowwidth/2)-(lb_Width/2)});

				$('.base,#ifr').css({'width':windowwidth,'height':windowheight});

				popupstatus = 1;

				$('a.close,.base').click(function(){

					disablepop();

				});

			}

		}



		function disablepop(){

			if (popupstatus == 1){

				$('#ifr').remove();

				$('#inneriframe').remove();

				$('.base').remove();

				$('.lbPanel').remove();

				popupstatus = 0;

			}

		}

		

		function poscenter2(){

			var windowwidth = document.documentElement.clientWidth;

			var windowheight = document.documentElement.clientHeight;

			$('.lbPanel').css({'top':(windowheight/2)-(lb_height/2),'left':(windowwidth/2)-(lb_Width/2)});

			$('.base,#ifr').css({'width':windowwidth,'height':windowheight});

		}

		

	});	

}

}

</textarea>

</div>

</div>

</div>

</div>

	</div>

</div>



</div>



<script type="text/javascript">

$(document).ready(function(){

/*	$('.component h2').click(function(){

	var labeltext = $(this).text();

	if(labeltext.indexOf('[+]')=='0'){

		labeltext = labeltext.substring(3);

		$(this).text('[-] '+labeltext).css('color','#86C533');

	}

	else{

		labeltext = labeltext.substring(3);

		$(this).text('[+] '+labeltext).css('color','#006596');

	}

	});*/

	

	//$.showAndhide($('.showsourcecode a'),{'hierarchy':'parent.next','event':'mouseover'});

	$.showAndhide($('.showsourcecode a'),{'hierarchy':'parent.next'});

	//$.showAndhide($('.component h2'),{'hierarchy':'next'});

	$('h1').click(function(){

	function dialogOutput(a){

	alert(a);

	}

	});

});

(function($){

$.showAndhide = function(obj,options) {

	

	var settings = $.extend({

	'hierarchy':'next',

	'event':'click'

	},options);

	

	var element = obj;

	var containerPos = settings.hierarchy;

	var eventType = settings.event;

	

	return obj.each(function(){

		$(this).bind({

		click:function(){

		if(containerPos=='next'){

			var nextobj = $(this).next();

			if(nextobj.css('display')=='none') nextobj.show();

			else nextobj.hide();

		}

		if(containerPos=='parent.next'){

			var nextobj = $(this).parent().next();

			if(nextobj.css('display')=='none') nextobj.show();

			else nextobj.hide();

		}

		},

		mouseover:function(){

			if(eventType=='mouseover'){

				if(containerPos=='next'){

					var nextobj = $(this).next();

					if(nextobj.css('display')=='none') nextobj.show();

				}

				if(containerPos=='parent.next'){

					var nextobj = $(this).parent().next();

					if(nextobj.css('display')=='none') nextobj.show();

				}

			}

		},

		mouseout:function(){

			if(eventType=='mouseover'){

				if(containerPos=='next'){

					var nextobj = $(this).next();

					if(nextobj.css('display')!=='none') nextobj.hide();

				}

				if(containerPos=='parent.next'){

					var nextobj = $(this).parent().next();

					if(nextobj.css('display')!=='none') nextobj.hide();

				}

			}

		}

		});

	});

}

})(jQuery);

</script>

</body>

</html>
